[package]
name = "umadb"
version = "0.1.0"
edition = "2024"
license = "MIT OR Apache-2.0"

[dependencies]
# Add dependencies as needed for your new project
crc32fast = "1.4.2"
itertools = "0.14.0"
tempfile = "3.20.0"
thiserror = "2.0.12"
uuid = { version = "1.17.0", features = ["v5", "v4"] }
tonic = "0.13.1"
prost = "0.13.1"
tokio = { version = "1.46.0", features = ["rt-multi-thread", "macros", "sync", "time", "signal"] }
tokio-stream = "0.1.14"
async-trait = "0.1.73"
futures = "0.3.28"
clap = { version = "4.5.6", features = ["derive"] }
libc = "0.2.174"
rand = "0.9.2"
memmap2 = "0.9.4"
#console-subscriber = "*"

[dev-dependencies]
# Add test dependencies as needed
serial_test = "2.0.0"
criterion = { version = "0.5", features = ["html_reports", "csv_output"] }

[build-dependencies]
tonic-build = "0.13.1"

[profile.test]
## Keep DWARF info so perf/dtrace can unwind and symbolize
debug = true        # or: debug = 2 (both are accepted; true == 2)
#
## Ensure nothing strips symbols
strip = "none"      # requires a sufficiently recent Rust toolchain
#
## Where to store debug info
## - Linux: keep in the binary (off)
## - macOS: emit a .dSYM bundle (unpacked) so Instruments/dtrace can find it
##split-debuginfo = "off"       # Linux
split-debuginfo = "unpacked" # macOS

[profile.release]
lto = true
codegen-units = 1
panic = "abort"

[profile.release-with-debug]
inherits = "release"

## Keep DWARF info so perf/dtrace can unwind and symbolize
debug = true        # or: debug = 2 (both are accepted; true == 2)
#
## Ensure nothing strips symbols
strip = "none"      # requires a sufficiently recent Rust toolchain
#
## Where to store debug info
## - Linux: keep in the binary (off)
## - macOS: emit a .dSYM bundle (unpacked) so Instruments/dtrace can find it
##split-debuginfo = "off"       # Linux
split-debuginfo = "unpacked" # macOS



[[bench]]
name = "grpc_read_bench"
harness = false

[[bench]]
name = "grpc_append_bench"
harness = false

[[bench]]
name = "grpc_read_with_writers_bench"
harness = false


[[bench]]
name = "grpc_append_with_readers_bench"
harness = false

[[bench]]
name = "grpc_append_cond_bench"
harness = false
